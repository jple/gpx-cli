// This file is automatically generated

package core

type Gpx struct {
	XMLName  string `xml:"gpx"`
	Filepath string `xml:"-"` // ok for json, but xml ?

	Metadata *struct {
		Desc string `xml:"desc,omitempty"`
		Name string `xml:"name,omitempty"`
	} `xml:"metadata,omitempty"`
	Trk []Trk `xml:"trk,omitempty"`
	Wpt []Wpt `xml:"wpt,omitempty"`

	// NOTE: use pointer in order to omitemtpy
	// (otherwise, parser expects Extensions to be non-empty, due to Vitesse child-field)
	// This notation is making code less readable
	Extensions struct {
		Vitesse float64 `xml:"vitesse,omitempty" descr:"Vitesse de marche sur plat (km/h)"`
	} `xml:"extensions,omitempty"`
}

type Trk struct {
	Name string `xml:"name,omitempty"`

	// Should be optional
	Extensions struct {
		DenivPos float64 `xml:"DenivPos,omitempty"`
		DenivNeg float64 `xml:"DenivNeg,omitempty"`
		Distance float64 `xml:"Distance,omitempty"`
		// Conversion du denivele positif/negatif en km effort
		DenivPosEffort float64 `xml:"DenivPosEffort,omitempty"`
		DenivNegEffort float64 `xml:"DenivNegEffort,omitempty"`

		// Distance équivalente sur plat en incluant le dénivelé 
		DistanceEffort float64 `xml:"DistanceEffort,omitempty"`

		// Estimation de temps de marche
		Duration     float64 `xml:"Duration,omitempty"`
		DurationHour int8    `xml:"DurationHour,omitempty"`
		DurationMin  int8    `xml:"DurationMin,omitempty"`

		Line struct {
			Xmlns string `xml:"xmlns,attr,omitempty"`

			Color      string `xml:"color,omitempty"`
			Opacity    string `xml:"opacity,omitempty"`
			Weight     string `xml:"Weight,omitempty"`
			Width      int    `xml:"width,omitempty"`
			Linecap    string `xml:"linecap,omitempty"`
			Linejoin   string `xml:"linejoin,omitempty"`
			Dasharray  *int   `xml:"dasharray,omitempty"`
			Dashoffset int    `xml:"dashoffset,omitempty"`

			Extensions *struct {
				Jonction int `xml:"jonction,omitempty"`
			} `xml:"extensions,omitempty"`
		} `xml:"line,omitzero"`
	} `xml:"extensions,omitempty"`

	Trkseg []Trkseg `xml:"trkseg"`
}

type Trkseg struct {
	Trkpt []Trkpt `xml:"trkpt"`
}

type Trkpt struct {
	Lat float64 `xml:"lat,attr"`
	Lon float64 `xml:"lon,attr"`
	Ele float64 `xml:"ele"`

	Name *string `xml:"name"`
	Type *string `xml:"type"`
	Cmt  *string `xml:"cmt"`

	Extensions *struct {
		TrkExtension struct {
			Visugpx string `xml:"visugpx,attr"`
			Node    int    `xml:"node"`
		} `xml:"TrkExtension"`
	} `xml:"extensions"`
}

type Wpt struct {
	Lat  float64 `xml:"lat,attr"`
	Lon  float64 `xml:"lon,attr"`
	Ele  float64 `xml:"ele"`
	Name *string `xml:"name"`
	Type *string `xml:"type"`
	Cmt  *string `xml:"cmt"`
}
